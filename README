Manage data in Docker
By default all files created inside a container are stored on a writable container layer. 
This means that:The data doesn’t persist when that container no longer exists, and it can be 
difficult to get the data out of the container if another process needs it.

But i would like to access my data even though container doesn’t exist.

Solution: Docker Volumes

Why Docker Volumes ?
Data is persisit
Volumes are easier to back up and migrate 

Docker has 3 options for containers to store files in the host machine, so that the files are persisted even after the container stops:

Docker volume types:
	anonymous volumes
	named voluems
	host volume or bind volumes
	
1) Anonymous volumes
	docker run -v /data 
Create a container with an anonymous volume which is mounted as /data01 on container. in this case we mention container directory name.
On host system it maps to a random-hash directory under /var/lib/docker directory.	

docker run -it --name vtwebuat01 -v /data01 nginx /bin/bash
	
2) Named voluems
Create a container with a named volume name which is mounted as /data01 on container. You can see volume name as vtwebuat02_data01_val

docker run -it --name vtwebuat02 -v vtwebuat02_data01_val:/data01 nginx /bin/bash

Create a named volume then attach volume to a container

docker volume create vtuatweb03_data01_vol
docker run -it --name vtuatweb03 -v vtuatweb02_data01_vol:/data01 nginx /bin/bash

Create a named volume with size

docker volume create --opt o=size=100m --opt device=/data3 --opt type=btrfs vtuatdb02_data3 // to create volume with size


Host Volumes
Create a host volume
mkdir /opt/data02
docker run -it --name vtwebuat03 -v /opt/data02:/data02 nginx /bin/bash
